openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/v1/partner/state:
    get:
      operationId: listPartnerStates
      description: "\u0441\u043C\u0435\u043D\u0438\u0442\u044C \u0441\u043E\u0441\u0442\
        \u043E\u044F\u043D\u0438\u0435 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\
        \u0441\u0442\u0438 \u043F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A\u0430"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreatePartnerState
      description: "\u0441\u043C\u0435\u043D\u0438\u0442\u044C \u0441\u043E\u0441\u0442\
        \u043E\u044F\u043D\u0438\u0435 \u0434\u043E\u0441\u0442\u0443\u043F\u043D\u043E\
        \u0441\u0442\u0438 \u043F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A\u0430"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/partner/orders:
    get:
      operationId: listOrders
      description: "\u041A\u043B\u0430\u0441\u0441 \u0434\u043B\u044F \u043F\u043E\
        \u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0438 \u0440\u0430\u0437\u043C\
        \u0435\u0448\u0435\u043D\u0438\u044F \u0437\u0430\u043A\u0430\u0437\u043E\u0432\
        \ \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\
        \u043C\u0438"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateOrder
      description: "\u041A\u043B\u0430\u0441\u0441 \u0434\u043B\u044F \u043F\u043E\
        \u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0438 \u0440\u0430\u0437\u043C\
        \u0435\u0448\u0435\u043D\u0438\u044F \u0437\u0430\u043A\u0430\u0437\u043E\u0432\
        \ \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\
        \u043C\u0438"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/categories:
    get:
      operationId: listCategorys
      description: "\u0441\u043F\u0438\u0441\u043E\u043A \u043A\u0430\u0442\u0435\u0433\
        \u043E\u0440\u0438\u0439"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    name:
                      type: string
                      maxLength: 55
                  required:
                  - name
          description: ''
  /api/v1/shops:
    get:
      operationId: listShops
      description: "\u0441\u043F\u0438\u0441\u043E\u043A \u043C\u0430\u0433\u0430\u0437\
        \u0438\u043D\u043E\u0432"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    name:
                      type: string
                      maxLength: 55
                    url:
                      type: string
                      format: uri
                      nullable: true
                      maxLength: 200
                      pattern: "^(?:[a-z0-9\\.\\-\\+]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:25[0-5]|2[0-4]\\\
                        d|[0-1]?\\d?\\d)(?:\\.(?:25[0-5]|2[0-4]\\d|[0-1]?\\d?\\d)){3}|\\\
                        [[0-9a-f:\\.]+\\]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1\
                        -\uFFFF0-9])?(?:\\.(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\\
                        .(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
                        .?|localhost))(?::\\d{2,5})?(?:[/?#][^\\s]*)?\\Z"
                    state:
                      type: boolean
                    user:
                      type: integer
                      nullable: true
                  required:
                  - name
          description: ''
  /api/v1/products:
    get:
      operationId: listProducts
      description: "\u0441\u043F\u0438\u0441\u043E\u043A \u0442\u043E\u0432\u0430\u0440\
        \u043E\u0432"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    name:
                      type: string
                      maxLength: 55
                    category:
                      type: string
                      readOnly: true
          description: ''
  /api/v1/product_details:
    get:
      operationId: listProductInfos
      description: "\u041F\u043E\u0438\u0441\u043A \u0442\u043E\u0432\u0430\u0440\u043E\
        \u0432\n\u0444\u0438\u043B\u044C\u0442\u0440\u044B \u043F\u043E \u043F\u0430\
        \u0440\u0430\u043C\u0435\u0442\u0440\u0430\u043C\n    shop_id\n    category_id\n\
        \    product_id"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
  /api/v1/basket:
    get:
      operationId: listBaskets
      description: "\u043A\u043E\u0440\u0437\u0438\u043D\u0430"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateBasket
      description: "\u043A\u043E\u0440\u0437\u0438\u043D\u0430"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    patch:
      operationId: PartialUpdateBasket
      description: "\u043A\u043E\u0440\u0437\u0438\u043D\u0430"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
    delete:
      operationId: DestroyBasket
      description: "\u043A\u043E\u0440\u0437\u0438\u043D\u0430"
      parameters: []
      responses:
        '204':
          description: ''
  /api/v1/order:
    get:
      operationId: listOrders
      description: "\u041A\u043B\u0430\u0441\u0441 \u0434\u043B\u044F \u043F\u043E\
        \u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0438 \u0440\u0430\u0437\u043C\
        \u0435\u0448\u0435\u043D\u0438\u044F \u0437\u0430\u043A\u0430\u0437\u043E\u0432\
        \ \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\
        \u043C\u0438"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
    post:
      operationId: CreateOrder
      description: "\u041A\u043B\u0430\u0441\u0441 \u0434\u043B\u044F \u043F\u043E\
        \u043B\u0443\u0447\u0435\u043D\u0438\u044F \u0438 \u0440\u0430\u0437\u043C\
        \u0435\u0448\u0435\u043D\u0438\u044F \u0437\u0430\u043A\u0430\u0437\u043E\u0432\
        \ \u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044F\
        \u043C\u0438"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/contact/:
    get:
      operationId: listContacts
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  properties:
                    id:
                      type: integer
                      readOnly: true
                    city:
                      type: string
                      maxLength: 50
                    street:
                      type: string
                      maxLength: 100
                    house:
                      type: string
                      maxLength: 15
                    structure:
                      type: string
                      maxLength: 15
                    building:
                      type: string
                      maxLength: 15
                    apartment:
                      type: string
                      maxLength: 15
                    phone:
                      type: string
                      maxLength: 20
                  required:
                  - city
                  - street
                  - phone
          description: ''
    post:
      operationId: createContact
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id001
              properties:
                city:
                  type: string
                  maxLength: 50
                street:
                  type: string
                  maxLength: 100
                house:
                  type: string
                  maxLength: 15
                structure:
                  type: string
                  maxLength: 15
                building:
                  type: string
                  maxLength: 15
                apartment:
                  type: string
                  maxLength: 15
                phone:
                  type: string
                  maxLength: 20
                user:
                  type: integer
                  writeOnly: true
              required:
              - city
              - street
              - phone
          application/x-www-form-urlencoded:
            schema: *id001
          multipart/form-data:
            schema: *id001
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  city:
                    type: string
                    maxLength: 50
                  street:
                    type: string
                    maxLength: 100
                  house:
                    type: string
                    maxLength: 15
                  structure:
                    type: string
                    maxLength: 15
                  building:
                    type: string
                    maxLength: 15
                  apartment:
                    type: string
                    maxLength: 15
                  phone:
                    type: string
                    maxLength: 20
                required:
                - city
                - street
                - phone
          description: ''
  /api/v1/user/contact/{id}/:
    get:
      operationId: retrieveContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  city:
                    type: string
                    maxLength: 50
                  street:
                    type: string
                    maxLength: 100
                  house:
                    type: string
                    maxLength: 15
                  structure:
                    type: string
                    maxLength: 15
                  building:
                    type: string
                    maxLength: 15
                  apartment:
                    type: string
                    maxLength: 15
                  phone:
                    type: string
                    maxLength: 20
                required:
                - city
                - street
                - phone
          description: ''
    put:
      operationId: updateContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id002
              properties:
                city:
                  type: string
                  maxLength: 50
                street:
                  type: string
                  maxLength: 100
                house:
                  type: string
                  maxLength: 15
                structure:
                  type: string
                  maxLength: 15
                building:
                  type: string
                  maxLength: 15
                apartment:
                  type: string
                  maxLength: 15
                phone:
                  type: string
                  maxLength: 20
                user:
                  type: integer
                  writeOnly: true
              required:
              - city
              - street
              - phone
          application/x-www-form-urlencoded:
            schema: *id002
          multipart/form-data:
            schema: *id002
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  city:
                    type: string
                    maxLength: 50
                  street:
                    type: string
                    maxLength: 100
                  house:
                    type: string
                    maxLength: 15
                  structure:
                    type: string
                    maxLength: 15
                  building:
                    type: string
                    maxLength: 15
                  apartment:
                    type: string
                    maxLength: 15
                  phone:
                    type: string
                    maxLength: 20
                required:
                - city
                - street
                - phone
          description: ''
    patch:
      operationId: partial_updateContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema: &id003
              properties:
                city:
                  type: string
                  maxLength: 50
                street:
                  type: string
                  maxLength: 100
                house:
                  type: string
                  maxLength: 15
                structure:
                  type: string
                  maxLength: 15
                building:
                  type: string
                  maxLength: 15
                apartment:
                  type: string
                  maxLength: 15
                phone:
                  type: string
                  maxLength: 20
                user:
                  type: integer
                  writeOnly: true
          application/x-www-form-urlencoded:
            schema: *id003
          multipart/form-data:
            schema: *id003
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                    readOnly: true
                  city:
                    type: string
                    maxLength: 50
                  street:
                    type: string
                    maxLength: 100
                  house:
                    type: string
                    maxLength: 15
                  structure:
                    type: string
                    maxLength: 15
                  building:
                    type: string
                    maxLength: 15
                  apartment:
                    type: string
                    maxLength: 15
                  phone:
                    type: string
                    maxLength: 20
                required:
                - city
                - street
                - phone
          description: ''
    delete:
      operationId: destroyContact
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
  /api/v1/partner/update:
    post:
      operationId: CreatePartnerUpdate
      description: "\u041A\u043B\u0430\u0441\u0441 \u0434\u043B\u044F \u043E\u0431\
        \u043D\u043E\u0432\u043B\u0435\u043D\u0438\u044F \u043F\u0440\u0430\u0439\u0441\
        \u0430 \u043E\u0442 \u043F\u043E\u0441\u0442\u0430\u0432\u0449\u0438\u043A\
        \u0430"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/login:
    post:
      operationId: CreateLoginAccount
      description: "\u0412\u0445\u043E\u0434"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/register:
    post:
      operationId: CreateRegisterAccount
      description: "\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044F"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/register/confirm:
    post:
      operationId: CreateConfirmAccount
      description: "\u041F\u043E\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043D\
        \u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438"
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema: {}
          description: ''
  /api/v1/user/password_reset:
    post:
      operationId: CreateEmail
      description: 'An Api View which provides a method to request a password reset
        token based on an e-mail address


        Sends a signal reset_password_token_created when a reset token was created'
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id004
              properties:
                email:
                  type: string
                  format: email
              required:
              - email
          application/x-www-form-urlencoded:
            schema: *id004
          multipart/form-data:
            schema: *id004
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  email:
                    type: string
                    format: email
                required:
                - email
          description: ''
  /api/v1/user/password_reset/confirm:
    post:
      operationId: CreatePasswordToken
      description: An Api View which provides a method to reset a password based on
        a unique token
      parameters: []
      requestBody:
        content:
          application/json:
            schema: &id005
              properties:
                password:
                  type: string
                token:
                  type: string
              required:
              - password
              - token
          application/x-www-form-urlencoded:
            schema: *id005
          multipart/form-data:
            schema: *id005
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  password:
                    type: string
                  token:
                    type: string
                required:
                - password
                - token
          description: ''
